// import {
//   dehydrate,
//   HydrationBoundary,
//   QueryClient,
// } from "@tanstack/react-query";
import type { Metadata } from "next";
import localFont from "next/font/local";
import "@/styles/globals.css";

const geistSans = localFont({
  src: "assets/fonts/Geist-VariableFont_wght.ttf", //../public/fonts/Geist-VariableFont_wght.ttf
  weight: "400",
  style: "normal",
  variable: "--geist-variable", // Optional CSS variable
});

//import { inter } from '@/app/ui/fonts';

export const metadata: Metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};

// export default function RootLayout({
//   children,
// }: Readonly<{
//   children: React.ReactNode;
// }>) => {

const RootLayout = async ({ children }: { children: React.ReactNode }) => {
  // const queryClient = new QueryClient();
  // await queryClient.prefetchQuery(getUserQueryOptions());
  // const dehydratedState = dehydrate(queryClient);

  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistSans.variable} antialiased`}
      >
        {children}
      </body>
    </html>
  );
};

export default RootLayout;

// We are not prerendering anything because the app is highly dynamic
// and the data depends on the user so we need to send cookies with each request
export const dynamic = "force-dynamic";
